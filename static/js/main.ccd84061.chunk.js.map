{"version":3,"sources":["components/Button/button.module.scss","containers/AnswersPage/answersPage.module.scss","components/Text/text.module.scss","components/LinkButton/linkButton.module.scss","containers/MainPage/mainPage.module.scss","containers/QuestionsPage/questionsPage.module.scss","components/NextButton/nextButton.module.scss","App.module.scss","components/Text/index.js","components/LinkButton/index.js","containers/MainPage/index.js","utils.js","hooks/useQuestions.js","colors.js","components/Button/index.js","context/questionsContext.js","containers/QuestionsPage/index.js","components/NextButton/index.js","containers/AnswersPage/index.js","App.js","index.js"],"names":["module","exports","Text","tag","fontSize","content","Tag","className","styles","text","style","LinkButton","destination","roundSize","customStyles","width","height","to","button","MainPage","wrapper","shuffle","array","arrayCopy","i","length","j","Math","floor","random","temp","questions","answers","correct","useQuestions","maxQuestions","useState","map","question","slice","colors","buttonSuccess","buttonFail","background","buttonTypes","success","fail","default","Button","onClick","type","backgroundColor","undefined","disabled","defaultProps","createContext","QuestionsPage","context","useContext","QuestionsContext","history","useHistory","questionNumber","setQuestionNumber","useEffect","answer","push","prevNumber","handleAnswer","NextButton","Link","attributes","xmlns","viewBox","id","data-name","transform","cx","cy","r","fill","d","AnswersPage","currentQuestion","currentAnswer","App","path","exact","ReactDOM","render","StrictMode","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.ccd84061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1Uw6D\",\"disabled\":\"button_disabled__2H7RE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"answersPage_wrapper__3c5Hm\",\"button\":\"answersPage_button__2cBRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"text_text__1IHVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"linkButton_button__1RM6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"mainPage_wrapper__2BUPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"questionsPage_wrapper__3Sj5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"nextButton_button__12eLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__q8765\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './text.module.scss';\r\n\r\nconst Text = ({ tag, fontSize, content }) => {\r\n  const Tag = tag;\r\n\r\n  return (\r\n    <Tag className={styles.text} style={{ fontSize }}>\r\n      {content}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n\r\nText.propTypes = {\r\n  tag: PropTypes.oneOf(['span', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6']).isRequired,\r\n  fontSize: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './linkButton.module.scss';\r\nimport Text from '../Text';\r\n\r\nconst LinkButton = ({ destination, content, fontSize, roundSize }) => {\r\n  const customStyles = { width: roundSize, height: roundSize };\r\n\r\n  return (\r\n    <Link\r\n      to={destination}\r\n      className={styles.button}\r\n      style={customStyles}\r\n    >\r\n      <Text\r\n        tag=\"span\"\r\n        fontSize={fontSize}\r\n        content={content}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n\r\nLinkButton.propTypes = {\r\n  destination: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  fontSize: PropTypes.string.isRequired,\r\n  roundSize: PropTypes.string.isRequired\r\n}\r\n","import React from 'react';\r\nimport Text from '../../components/Text';\r\nimport LinkButton from '../../components/LinkButton';\r\nimport styles from './mainPage.module.scss';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Text tag=\"h1\" fontSize=\"3rem\" content=\"quizz app\" />\r\n      <LinkButton destination=\"/questions\" content=\"start\" fontSize=\"3rem\" roundSize=\"15rem\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export const shuffle = (array) => {\r\n  const arrayCopy = [...array];\r\n  for(let i = arrayCopy.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * i)\r\n    const temp = arrayCopy[i]\r\n    arrayCopy[i] = arrayCopy[j]\r\n    arrayCopy[j] = temp\r\n  }\r\n  return arrayCopy;\r\n};\r\n","import { useState } from 'react';\r\nimport { shuffle } from '../utils';\r\n\r\nconst questions = [\r\n  {\r\n    text: 'What was the first commercially successful video game?',\r\n    answers: ['pac-man', 'pong', 'saper'],\r\n    correct: 'pong'\r\n  },\r\n  {\r\n    text: 'What is the best selling videogame of all time?',\r\n    answers: ['minecraft', 'terraria', 'roblox'],\r\n    correct: 'minecraft'\r\n  },\r\n  {\r\n    text: 'What is the highest-selling gaming console to date?',\r\n    answers: ['ps2', 'ps3', 'xbox 360'],\r\n    correct: 'ps2'\r\n  },\r\n  {\r\n    text: 'What is the name of Marioâ€™s dinosaur sidekick?',\r\n    answers: ['luigi', 'yoshi', 'bowser'],\r\n    correct: 'yoshi'\r\n  },\r\n  {\r\n    text: 'Who released the first flight simulator game?',\r\n    answers: ['microsoft', 'apple', 'samsung'],\r\n    correct: 'microsoft'\r\n  },\r\n  {\r\n    text: 'What year was Nintendo founded?',\r\n    answers: ['1954', '1889', '1992'],\r\n    correct: '1889'\r\n  }\r\n];\r\n\r\nconst shuffleQuestions = (questions) => {\r\n  return shuffle(questions.map((question) => ({\r\n    text: question.text,\r\n    answers: shuffle(question.answers),\r\n    correct: question.correct\r\n  })));\r\n};\r\n\r\nconst useQuestions = (maxQuestions) => {\r\n  const [chosenQuestions] = useState(shuffleQuestions(questions).slice(0, maxQuestions));\r\n  return chosenQuestions;\r\n};\r\n\r\nexport default useQuestions;\r\n","const colors = {\r\n  button: '#FF7E7E',\r\n  buttonSuccess: '#9CFF7E',\r\n  buttonFail: '#AC1010',\r\n  text: '#FFFFFF',\r\n  background: '#FF5151'\r\n};\r\n\r\nexport default colors;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Text from '../Text';\r\nimport styles from './button.module.scss';\r\nimport colors from '../../colors';\r\n\r\nconst buttonTypes = {\r\n  success: colors.buttonSuccess,\r\n  fail: colors.buttonFail,\r\n  default: colors.button\r\n}\r\n\r\nconst Button = ({ onClick, content, fontSize, type, width }) => {\r\n  const customStyles = { backgroundColor: buttonTypes[type], width };\r\n  const className = `${styles.button} ${onClick === undefined ? styles.disabled : ''}`;\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={className}\r\n      style={customStyles}\r\n    >\r\n      <Text\r\n        tag=\"span\"\r\n        fontSize={fontSize}\r\n        content={content}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  content: PropTypes.string.isRequired,\r\n  fontSize: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf(['default', 'success', 'fail']),\r\n  width: PropTypes.string.isRequired\r\n};\r\n\r\nButton.defaultProps = {\r\n  onClick: undefined,\r\n  type: 'default'\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext();\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useQuestions from '../../hooks/useQuestions';\r\nimport Text from '../../components/Text';\r\nimport Button from '../../components/Button';\r\nimport styles from './questionsPage.module.scss';\r\nimport QuestionsContext from '../../context/questionsContext';\r\n\r\n// I am fully aware of duplicated code and that I could make AnswersPage and QuestionsPage as one component but I wanted to use routing and context api in order to learn them\r\nconst QuestionsPage = () => {\r\n  const context = useContext(QuestionsContext);\r\n  const questions = useQuestions(3);\r\n  const history = useHistory();\r\n  const [questionNumber, setQuestionNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    context.questions = questions;\r\n    context.answers = [];\r\n  }, []);\r\n\r\n  const handleAnswer = (answer) => {\r\n    context.answers = [...context.answers, answer];\r\n\r\n    if (questionNumber >= questions.length - 1) {\r\n      history.push('/answers');\r\n    } else {\r\n      setQuestionNumber((prevNumber) => prevNumber + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Text tag=\"h2\" fontSize=\"2.4rem\" content={`Question ${questionNumber + 1}:`} />\r\n      <Text tag=\"p\" fontSize=\"1.5rem\" content={questions[questionNumber].text} />\r\n      {questions[questionNumber].answers.map((answer) => (\r\n        <Button\r\n          key={answer}\r\n          onClick={() => handleAnswer(answer)}\r\n          content={answer}\r\n          fontSize=\"2rem\"\r\n          width=\"15rem\"\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './nextButton.module.scss';\r\n\r\nconst NextButton = ({ destination, onClick }) => {\r\n  const Tag = destination ? Link : 'button';\r\n  const attributes = destination ? { to: destination } : { onClick: onClick };\r\n\r\n  return (\r\n    <Tag\r\n      {...attributes}\r\n      className={styles.button}\r\n    >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 109 109\">\r\n        <g id=\"Group_1\" data-name=\"Group 1\" transform=\"translate(-267 -696)\">\r\n          <circle id=\"Ellipse_2\" data-name=\"Ellipse 2\" cx=\"54.5\" cy=\"54.5\" r=\"54.5\" transform=\"translate(267 696)\" fill=\"#fff\"/>\r\n          <path id=\"Polygon_1\" data-name=\"Polygon 1\" d=\"M34,0,68,59H0Z\" transform=\"translate(359 716) rotate(90)\" fill=\"#ff7e7e\"/>\r\n        </g>\r\n      </svg>\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default NextButton;\r\n\r\nNextButton.propTypes = {\r\n  destination: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nNextButton.defaultProps = {\r\n  destination: undefined,\r\n  onClick: undefined\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuestionsContext from '../../context/questionsContext';\r\nimport Text from '../../components/Text';\r\nimport Button from '../../components/Button';\r\nimport NextButton from '../../components/NextButton';\r\nimport styles from './answersPage.module.scss';\r\n\r\n// I am fully aware of duplicated code and that I could make AnswersPage and QuestionsPage as one component but I wanted to use routing and context api in order to learn them\r\nconst AnswersPage = () => {\r\n  const context = useContext(QuestionsContext);\r\n  const history = useHistory();\r\n  const [questionNumber, setQuestionNumber] = useState(0);\r\n\r\n  const handleNext = () => {\r\n    if (questionNumber >= context.answers.length - 1) {\r\n      history.push('/');\r\n    } else {\r\n      setQuestionNumber((prevNumber) => prevNumber + 1);\r\n    }\r\n  }\r\n\r\n  const currentQuestion = context.questions[questionNumber];\r\n  const currentAnswer = context.answers[questionNumber];\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Text tag=\"h2\" fontSize=\"2.4rem\" content={`Question ${questionNumber + 1}:`} />\r\n      <Text tag=\"p\" fontSize=\"1.5rem\" content={currentQuestion.text} />\r\n      {currentQuestion.answers.map((answer) => (\r\n        <Button\r\n          key={answer}\r\n          content={answer}\r\n          type={currentAnswer !== answer ? 'default' : currentAnswer === currentQuestion.correct ? 'success' : 'fail'}\r\n          fontSize=\"2rem\"\r\n          width=\"15rem\"\r\n        />\r\n      ))}\r\n      <div className={styles.button}>\r\n        <NextButton onClick={handleNext} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswersPage;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainPage from './containers/MainPage';\nimport QuestionsPage from './containers/QuestionsPage';\nimport AnswersPage from './containers/AnswersPage';\nimport styles from './App.module.scss';\n\nconst App = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MainPage />\n        </Route>\n        <Route path=\"/questions\">\n          <QuestionsPage />\n        </Route>\n        <Route path=\"/answers\">\n          <AnswersPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.scss';\nimport QuestionsContext from './context/questionsContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuestionsContext.Provider value={{\n      questions: {},\n      answers: {}\n    }}>\n      <Router>\n        <App />\n      </Router>\n    </QuestionsContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}